openapi: 3.0.0
info:
  title: Reset Password API
  version: 1.0.0
  description: API endpoint for resetting user password with valid token

paths:
  /api/auth/reset-password:
    post:
      summary: Reset password
      description: |
        Resets user password using a valid reset token.
        Validates password strength, updates password, marks token as used,
        creates JWT session, and sends confirmation email.

      tags:
        - Authentication

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
              properties:
                token:
                  type: string
                  format: uuid
                  description: Password reset token from email link
                  example: "018c2e65-ec97-7c5d-9e18-5c24a4d7c8e9"
                password:
                  type: string
                  format: password
                  description: New password (min 8 chars, uppercase, lowercase, number)
                  minLength: 8
                  maxLength: 128
                  example: "NewSecure123"

            examples:
              validRequest:
                summary: Valid password reset request
                value:
                  token: "018c2e65-ec97-7c5d-9e18-5c24a4d7c8e9"
                  password: "NewSecure123"

              weakPassword:
                summary: Weak password (fails validation)
                value:
                  token: "018c2e65-ec97-7c5d-9e18-5c24a4d7c8e9"
                  password: "weak"

      responses:
        '200':
          description: Password reset successful
          headers:
            Set-Cookie:
              description: JWT session token in httpOnly cookie
              schema:
                type: string
                example: "token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly; Secure; SameSite=Strict"
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - message
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Password reset successful"

        '400':
          description: Bad request (invalid password format)
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid password format"
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: "password"
                        message:
                          type: string
                          example: "Password must contain at least one uppercase letter"

              examples:
                weakPassword:
                  summary: Password fails strength requirements
                  value:
                    error: "Invalid password format"
                    details:
                      - field: "password"
                        message: "Password must be at least 8 characters"
                      - field: "password"
                        message: "Password must contain at least one uppercase letter"

        '404':
          description: Token not found or expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid or expired reset token"

        '410':
          description: Token already used
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Reset link has already been used"
                  message:
                    type: string
                    example: "This reset link has already been used. Request a new one if needed."

        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to reset password"

      security: []  # Public endpoint (token in request body is the credential)

components:
  schemas:
    ResetPasswordRequest:
      type: object
      required:
        - token
        - password
      properties:
        token:
          type: string
          format: uuid
        password:
          type: string
          format: password
          minLength: 8
          maxLength: 128

    ResetPasswordResponse:
      type: object
      required:
        - success
        - message
      properties:
        success:
          type: boolean
        message:
          type: string

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: array
          items:
            type: object
        message:
          type: string
